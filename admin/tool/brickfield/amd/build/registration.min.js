define("tool_brickfield/registration",["exports","core/ajax","core/templates","core/log"],(function(_exports,_ajax,_templates,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Handles polling registration status and replaces the alert block with the new one.
   *
   * @module     tool_brickfield/registration
   * @copyright  2024 onward Brickfield Education Labs Ltd, https://www.brickfield.ie
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=function init(){_ajax.default.call([{methodname:"tool_brickfield_check_toolkit_validation",args:{},done:data=>{-1==data.status?setTimeout((()=>{init()}),2e3):replaceAlertBlock(data.message,data.level)},fail:err=>{_log.default.error(err)}}])},_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates),_log=_interopRequireDefault(_log);const replaceAlertBlock=(message,level)=>{_templates.default.render("core/notification",{message:message,issuccess:"success"==level,iswarning:"warning"==level,iserror:"error"==level,closebutton:!0}).then((html=>{const oldAlert=document.querySelector(".alert-block");let temp=document.createElement("div");temp.innerHTML=html;let newAlert=temp.firstChild;oldAlert.parentNode.insertBefore(newAlert,oldAlert),oldAlert.parentNode.removeChild(oldAlert)})).catch((err=>{_log.default.error(err)}))}}));

//# sourceMappingURL=registration.min.js.map