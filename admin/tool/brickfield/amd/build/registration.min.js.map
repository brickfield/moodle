{"version":3,"file":"registration.min.js","sources":["../src/registration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Ajax from 'core/ajax';\nimport Template from 'core/templates';\nimport Log from 'core/log';\n\n/**\n * Handles polling registration status and replaces the alert block with the new one.\n *\n * @module     tool_brickfield/registration\n * @copyright  2024 onward Brickfield Education Labs Ltd, https://www.brickfield.ie\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport function init() {\n    Ajax.call([{\n        methodname: 'tool_brickfield_check_toolkit_validation',\n        args: {},\n        done: (data) => {\n            if (data.status == -1) {\n                // Status of -1 indicates the registration adhoc task is running.\n                setTimeout(() => {\n                    init();\n                }, 2000);\n            } else {\n                replaceAlertBlock(data.message, data.level);\n            }\n        },\n        fail: (err) => {\n            Log.error(err);\n        }\n    }]);\n}\n\n/**\n * Replaces the existing alert block with a new one.\n * @param {string} message The notification message\n * @param {string} level The notification level\n */\nconst replaceAlertBlock = (message, level) => {\n    Template.render('core/notification', {\n        message: message,\n        issuccess: level == 'success',\n        iswarning: level == 'warning',\n        iserror: level == 'error',\n        closebutton: true\n    }).then((html) => {\n        const oldAlert = document.querySelector('.alert-block');\n        let temp = document.createElement('div');\n        temp.innerHTML = html;\n        let newAlert = temp.firstChild;\n        oldAlert.parentNode.insertBefore(newAlert, oldAlert);\n        oldAlert.parentNode.removeChild(oldAlert);\n        return;\n    }).catch((err) => {\n        Log.error(err);\n    });\n};\n"],"names":["init","call","methodname","args","done","data","status","setTimeout","replaceAlertBlock","message","level","fail","err","error","render","issuccess","iswarning","iserror","closebutton","then","html","oldAlert","document","querySelector","temp","createElement","innerHTML","newAlert","firstChild","parentNode","insertBefore","removeChild","catch"],"mappings":";;;;;;;oFA0BgBA,qBACPC,KAAK,CAAC,CACPC,WAAY,2CACZC,KAAM,GACNC,KAAOC,QACiB,GAAhBA,KAAKC,OAELC,YAAW,KACPP,SACD,KAEHQ,kBAAkBH,KAAKI,QAASJ,KAAKK,QAG7CC,KAAOC,mBACCC,MAAMD,oIAUhBJ,kBAAoB,CAACC,QAASC,4BACvBI,OAAO,oBAAqB,CACjCL,QAASA,QACTM,UAAoB,WAATL,MACXM,UAAoB,WAATN,MACXO,QAAkB,SAATP,MACTQ,aAAa,IACdC,MAAMC,aACCC,SAAWC,SAASC,cAAc,oBACpCC,KAAOF,SAASG,cAAc,OAClCD,KAAKE,UAAYN,SACbO,SAAWH,KAAKI,WACpBP,SAASQ,WAAWC,aAAaH,SAAUN,UAC3CA,SAASQ,WAAWE,YAAYV,aAEjCW,OAAOpB,mBACFC,MAAMD"}