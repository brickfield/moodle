{"version":3,"sources":["../src/module.js"],"names":["toggleState","renderTemplate","element","errorCount","checkCount","displayFormat","minViews","viewDelta","weight","parseInt","context","resultPassed","classList","passRate","failureRate","Math","round","Promise","resolve","elementClassList","push","showIcons","showBackground","add","join","Templates","renderForPromise","then","html","js","appendNodeContents","catch","e","window","console","log","showAccessMap","courseId","all","fetchReviewData","sectionData","moduleData","getErrorTotals","forEach","section","document","querySelector","numerrors","numchecks","module","getElementById","cmid","displayError","hideAccessMap","querySelectorAll","node","remove","toggleAccessMap","methodname","args","toggle","totals","totalErrors","totalUsers","maxViews","concat","item","registerEventListeners","addEventListener","target","closest","preventDefault","courseid","init","toggled"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @package     block_accessreview\n * @author      Max Larkin <max@brickfieldlabs.ie>\n * @copyright   2020 Brickfield Education Labs <max@brickfieldlabs.ie>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport * as Templates from 'core/templates';\nimport {exception as displayError} from 'core/notification';\n\n/**\n * The number of colours used to represent the heatmap. (Indexed on 0.)\n * @type {number}\n */\nconst numColours = 2;\n\n/**\n * The toggle state of the heatmap.\n * @type {boolean}\n */\nlet toggleState = true;\n\n/**\n * Renders the HTML template onto a particular HTML element.\n * @param {HTMLElement} element The element to attach the HTML to.\n * @param {number} errorCount The number of errors on this module/section.\n * @param {number} checkCount The number of checks triggered on this module/section.\n * @param {String} displayFormat\n * @param {Number} minViews\n * @param {Number} viewDelta\n * @returns {Promise}\n */\nconst renderTemplate = (element, errorCount, checkCount, displayFormat, minViews, viewDelta) => {\n    // Calculate a weight?\n    const weight = parseInt((errorCount - minViews) / viewDelta * numColours);\n\n    const context = {\n        resultPassed: !errorCount,\n        classList: '',\n        passRate: {\n            errorCount,\n            checkCount,\n            failureRate: Math.round(errorCount / checkCount * 100),\n        },\n    };\n\n    if (!element) {\n        return Promise.resolve();\n    }\n\n    const elementClassList = ['block_accessreview'];\n    if (context.resultPassed) {\n        elementClassList.push('block_accessreview_success');\n    } else if (weight) {\n        elementClassList.push('block_accessreview_danger');\n    } else {\n        elementClassList.push('block_accessreview_warning');\n    }\n\n    const showIcons = (displayFormat == 'showicons') || (displayFormat == 'showboth');\n    const showBackground = (displayFormat == 'showbackground') || (displayFormat == 'showboth');\n\n    if (showBackground && !showIcons) {\n        // Only the background is displayed.\n        // No need to display the template.\n        // Note: The case where both the background and icons are shown is handled later to avoid jankiness.\n        element.classList.add(...elementClassList, 'alert');\n\n        return Promise.resolve();\n    }\n\n    if (showIcons && !showBackground) {\n        context.classList = elementClassList.join(' ');\n    }\n\n    // The icons are displayed either with, or without, the background.\n    return Templates.renderForPromise('block_accessreview/status', context)\n    .then(({html, js}) => {\n        Templates.appendNodeContents(element, html, js);\n\n        if (showBackground) {\n            element.classList.add(...elementClassList, 'alert');\n        }\n\n        return;\n    })\n    .catch(e => {\n        window.console.log(e);\n    });\n};\n\n/**\n * Applies the template to all sections and modules on the course page.\n *\n * @param {Number} courseId\n * @param {String} displayFormat\n * @returns {Promise}\n */\nconst showAccessMap = (courseId, displayFormat) => {\n    // Get error data.\n    return Promise.all(fetchReviewData(courseId))\n    .then(([sectionData, moduleData]) => {\n        // Get total data.\n        const {minViews, viewDelta} = getErrorTotals(sectionData, moduleData);\n\n        sectionData.forEach(section => {\n            const element = document.querySelector(`#section-${section.section} .summary`);\n            if (!element) {\n                return;\n            }\n\n            renderTemplate(element, section.numerrors, section.numchecks, displayFormat, minViews, viewDelta);\n        });\n\n        moduleData.forEach(module => {\n            const element = document.getElementById(`module-${module.cmid}`);\n            if (!element) {\n                return;\n            }\n\n            renderTemplate(element, module.numerrors, module.numchecks, displayFormat, minViews, viewDelta);\n        });\n\n        return {\n            sectionData,\n            moduleData,\n        };\n    })\n    .catch(displayError);\n};\n\n\n/**\n * Hides or removes the templates from the HTML of the current page.\n */\nconst hideAccessMap = () => {\n    // Removes the added elements.\n    document.querySelectorAll('.block_accessreview_view').forEach(node => node.remove());\n\n    const classList = [\n        'block_accessreview',\n        'block_accessreview_success',\n        'block_accessreview_warning',\n        'block_accessreview_danger',\n        'block_accessreview_view',\n    ];\n\n    // Removes the added classes.\n    document.querySelectorAll('.block_accessreview').forEach(node => node.classList.remove(...classList));\n};\n\n\n/**\n * Toggles the heatmap on/off.\n *\n * @param {Number} courseId\n * @param {String} displayFormat\n */\nconst toggleAccessMap = (courseId, displayFormat) => {\n    if (toggleState) {\n        hideAccessMap();\n    } else {\n        showAccessMap(courseId, displayFormat);\n    }\n\n    toggleState = !toggleState;\n    fetchMany([{\n        methodname: 'block_accessreview_set_toggle_preference',\n        args: {toggle: toggleState}\n    }]);\n};\n\n/**\n * Parses information on the errors, generating the min, max and totals.\n *\n * @param {Object[]} sectionData The error data for course sections.\n * @param {Object[]} moduleData The error data for course modules.\n * @returns {Object} An object representing the extra error information.\n*/\nconst getErrorTotals = (sectionData, moduleData) => {\n    const totals = {\n        totalErrors: 0,\n        totalUsers: 0,\n        minViews: 0,\n        maxViews: 0,\n        viewDelta: 0,\n    };\n\n    [].concat(sectionData, moduleData).forEach(item => {\n        totals.totalErrors += item.numerrors;\n        if (item.numerrors < totals.minViews) {\n            totals.minViews = item.numerrors;\n        }\n\n        if (item.numerrors > totals.maxViews) {\n            totals.maxViews = item.numerrors;\n        }\n        totals.totalUsers += item.numchecks;\n    });\n\n    totals.viewDelta = totals.maxViews - totals.minViews + 1;\n\n    return totals;\n};\n\nconst registerEventListeners = (courseId, displayFormat) => {\n    document.addEventListener('click', e => {\n        if (e.target.closest('#toggle-accessmap')) {\n            e.preventDefault();\n            toggleAccessMap(courseId, displayFormat);\n        }\n    });\n};\n\n/**\n * Fetch the review data.\n *\n * @param   {Number} courseid\n * @returns {Promise[]}\n */\nconst fetchReviewData = courseid => fetchMany([\n    {\n        methodname: 'block_accessreview_get_section_data',\n        args: {courseid}\n    },\n    {\n        methodname: 'block_accessreview_get_module_data',\n        args: {courseid}\n    },\n]);\n\n/**\n * Setting up the access review module.\n * @param {number} toggled A number represnting the state of the review toggle.\n * @param {string} displayFormat A string representing the display format for icons.\n * @param {number} courseId The course ID.\n */\nexport const init = (toggled, displayFormat, courseId) => {\n    // Settings consts.\n    toggleState = toggled == 1;\n\n    if (toggleState) {\n        showAccessMap(courseId, displayFormat);\n    }\n\n    registerEventListeners(courseId, displayFormat);\n};\n"],"file":"module.min.js"}